plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.1.21"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"chatai" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// 基础Fabric依赖
	minecraft "com.mojang:minecraft:1.20.1"
	mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
	modImplementation "net.fabricmc:fabric-loader:0.14.22"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.88.1+1.20.1"
	modImplementation "net.fabricmc.fabric-api:fabric-command-api-v2:2.2.0+3cc0f0907d"

	// Fabric Kotlin支持
	modImplementation "net.fabricmc:fabric-language-kotlin:1.9.6+kotlin.1.8.22"

	// 消息API (1.20.1需要单独添加)
	modImplementation "net.fabricmc.fabric-api:fabric-message-api-v1:2.0.0+3cc0f0907d"

	// OkHttp网络库
	modImplementation "com.squareup.okhttp3:okhttp:4.11.0"
	include "com.squareup.okhttp3:okhttp:4.11.0"

	// JSON处理
	implementation 'org.json:json:20231013'
	include 'org.json:json:20231013'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}